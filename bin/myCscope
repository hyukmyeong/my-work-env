#!/bin/bash

declare check_kernel

echo
echo "your dir : $PWD"

echo "what do you want?"
echo "1.generate 2.clean"
echo ""
read -p "you selected : " input

check_kernel="`pwd | grep kernel`"
if [ -e "$check_kernel" ]
then
    echo "it is kernel dir"
    make ARCH=arm tags cscope
    exit 0
fi

if [ "$input" -eq 1 ]; then

    # below needs for code completion with emacs company-rtags company-irony
    # but this should be set in bitbake recipe in yocto

    # mkdir build && cd build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    # cp compile_commands.json .. && cd .. && rm -rf build

    ln -s /usr/include usr_include

    find . -type d \( -name .git -o -name oe-workdir -o -name oe-logs \) -prune -false -o -name '*.[chS]' -o -name '*.mk' -o -name '*.cc' -o -name '*.hpp' -o -name '*.cpp*' -o -name 'Makefile' ! -type l  >cscope.files
    # cscope -bqkv -i cscope.files
    # cscope -b -k
    cscope -b -q -k -R -v -i cscope.files
    ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --exclude={.git,oe-workdir,oe-logs}
    gtags

    if [ ! -e .git ]; then
        # git init .
        touch .projectile
    fi

elif [ "$input" -eq 2 ]; then

    rm -rf usr_include
    rm -rf cscope*
    rm -rf *tags*
    rm -rf GPATH GRTAGS GSYMS GTAGS

    # if git log 2>&1 | grep fatal; then
    #    rm -rf .git
    # fi

    if [ -e .projectile ]; then
        rm .projectile
    fi

else
    echo do nothing
fi
