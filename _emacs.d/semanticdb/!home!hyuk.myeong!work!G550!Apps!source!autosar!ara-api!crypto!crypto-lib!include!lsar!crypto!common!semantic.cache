;; Object semanticdb-project-database-file-13346f0
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-13346f0"
  :tables
  (list
    (semanticdb-table "semanticdb-table-133470c"
      :major-mode c++-mode
      :tags 
        '( ("LSAR_CRYPTO_COMMON_BASE_ID_TYPES_IMPL_H_" variable (:constant-flag t) nil [623 663])
            ("ara/crypto/common/base_id_types.h" include nil nil [665 709])
            ("map" include (:system-flag t) nil [710 724])
            ("CRYPTO_PROVIDER_NAME" variable (:constant-flag t) nil [734 754])
            ("KEY_STORAGE_PROVIDER_NAME" variable (:constant-flag t) nil [780 805])
            ("UNSUPPORTED_DIGEST_LENGTH" variable (:constant-flag t) nil [836 861])
            ("UNKNOWN_ID" variable (:constant-flag t) nil [876 886])
            ("HASH_ALG_MASK" variable (:constant-flag t) nil [900 913])
            ("GET_TARGET" variable (:constant-flag t) nil [945 955])
            ("GET_MAIN_ALG" variable (:constant-flag t) nil [993 1005])
            ("GET_SUB_ALG" variable (:constant-flag t) nil [1060 1071])
            ("GET_PADDING" variable (:constant-flag t) nil [1126 1137])
            ("GENERATE_TARGET" variable (:constant-flag t) nil [1176 1191])
            ("GENERATE_MAIN_ALG" variable (:constant-flag t) nil [1231 1248])
            ("GENERATE_SUB_ALG" variable (:constant-flag t) nil [1285 1301])
            ("GENERATE_PADDING" variable (:constant-flag t) nil [1339 1355])
            ("GET_ALG_ID" variable (:constant-flag t) nil [1378 1388])
            ("TARGET_MASK" variable (:constant-flag t) nil [1469 1480])
            ("MAIN_ALG_MASK" variable (:constant-flag t) nil [1505 1518])
            ("SUB_ALG_MASK" variable (:constant-flag t) nil [1541 1553])
            ("PADDING_MASK" variable (:constant-flag t) nil [1574 1586])
            ("MAIN_DELEMETER" variable (:constant-flag t) nil [1606 1620])
            ("SUB_DELEMETER" variable (:constant-flag t) nil [1638 1651])
            ("SIG_STR" variable (:constant-flag t) nil [1793 1800])
            ("VER_STR" variable (:constant-flag t) nil [1852 1859])
            ("ENC_STR" variable (:constant-flag t) nil [1914 1921])
            ("DEC_STR" variable (:constant-flag t) nil [1974 1981])
            ("KEM_STR" variable (:constant-flag t) nil [2034 2041])
            ("RNG_STR" variable (:constant-flag t) nil [2101 2108])
            ("HASH_STR" variable (:constant-flag t) nil [2163 2171])
            ("MAC_STR" variable (:constant-flag t) nil [2210 2217])
            ("KDF_STR" variable (:constant-flag t) nil [2277 2284])
            ("TARGET_START" variable (:constant-flag t) nil [2341 2353])
            ("SIG_ID" variable (:constant-flag t) nil [2369 2375])
            ("VER_ID" variable (:constant-flag t) nil [2443 2449])
            ("ENC_ID" variable (:constant-flag t) nil [2520 2526])
            ("DEC_ID" variable (:constant-flag t) nil [2595 2601])
            ("KEM_ID" variable (:constant-flag t) nil [2670 2676])
            ("RNG_ID" variable (:constant-flag t) nil [2752 2758])
            ("HASH_ID" variable (:constant-flag t) nil [2829 2836])
            ("MAC_ID" variable (:constant-flag t) nil [2891 2897])
            ("KDF_ID" variable (:constant-flag t) nil [2973 2979])
            ("TARGET_END" variable (:constant-flag t) nil [3051 3061])
            ("PKCS1_V2_2_STR" variable (:constant-flag t) nil [3483 3497])
            ("PKCS1_V1_5_STR" variable (:constant-flag t) nil [3526 3540])
            ("PADDING_START" variable (:constant-flag t) nil [3578 3591])
            ("PKCS1_V2_2_ID" variable (:constant-flag t) nil [3901 3914])
            ("PKCS1_V1_5_ID" variable (:constant-flag t) nil [3953 3966])
            ("PADDING_END" variable (:constant-flag t) nil [4005 4016])
            ("DRNG_STR" variable (:constant-flag t) nil [4260 4268])
            ("TRNG_STR" variable (:constant-flag t) nil [4333 4341])
            ("AES_128_STR" variable (:constant-flag t) nil [4592 4603])
            ("AES_192_STR" variable (:constant-flag t) nil [4630 4641])
            ("AES_256_STR" variable (:constant-flag t) nil [4668 4679])
            ("AES_128_ECB_STR" variable (:constant-flag t) nil [4707 4722])
            ("AES_192_ECB_STR" variable (:constant-flag t) nil [4753 4768])
            ("AES_256_ECB_STR" variable (:constant-flag t) nil [4799 4814])
            ("AES_128_OFB_STR" variable (:constant-flag t) nil [4846 4861])
            ("AES_192_OFB_STR" variable (:constant-flag t) nil [4892 4907])
            ("AES_256_OFB_STR" variable (:constant-flag t) nil [4938 4953])
            ("AES_128_CFB_STR" variable (:constant-flag t) nil [4985 5000])
            ("AES_192_CFB_STR" variable (:constant-flag t) nil [5031 5046])
            ("AES_256_CFB_STR" variable (:constant-flag t) nil [5077 5092])
            ("AES_128_CBC_STR" variable (:constant-flag t) nil [5124 5139])
            ("AES_192_CBC_STR" variable (:constant-flag t) nil [5170 5185])
            ("AES_256_CBC_STR" variable (:constant-flag t) nil [5216 5231])
            ("AES_128_CTR_STR" variable (:constant-flag t) nil [5263 5278])
            ("AES_192_CTR_STR" variable (:constant-flag t) nil [5309 5324])
            ("AES_256_CTR_STR" variable (:constant-flag t) nil [5355 5370])
            ("AES_128_GCM_STR" variable (:constant-flag t) nil [5402 5417])
            ("AES_192_GCM_STR" variable (:constant-flag t) nil [5448 5463])
            ("AES_256_GCM_STR" variable (:constant-flag t) nil [5494 5509])
            ("AES_128_CCM_STR" variable (:constant-flag t) nil [5541 5556])
            ("AES_192_CCM_STR" variable (:constant-flag t) nil [5587 5602])
            ("AES_256_CCM_STR" variable (:constant-flag t) nil [5633 5648])
            ("AES_128_Poly1305_STR" variable (:constant-flag t) nil [5680 5700])
            ("AES_192_Poly1305_STR" variable (:constant-flag t) nil [5731 5751])
            ("AES_256_Poly1305_STR" variable (:constant-flag t) nil [5782 5802])
            ("Camellia_128_STR" variable (:constant-flag t) nil [5834 5850])
            ("Camellia_192_STR" variable (:constant-flag t) nil [5881 5897])
            ("Camellia_256_STR" variable (:constant-flag t) nil [5928 5944])
            ("Camellia_128_ECB_STR" variable (:constant-flag t) nil [5976 5996])
            ("Camellia_192_ECB_STR" variable (:constant-flag t) nil [6031 6051])
            ("Camellia_256_ECB_STR" variable (:constant-flag t) nil [6086 6106])
            ("Camellia_128_OFB_STR" variable (:constant-flag t) nil [6142 6162])
            ("Camellia_192_OFB_STR" variable (:constant-flag t) nil [6197 6217])
            ("Camellia_256_OFB_STR" variable (:constant-flag t) nil [6252 6272])
            ("Camellia_128_CBF_STR" variable (:constant-flag t) nil [6308 6328])
            ("Camellia_192_CBF_STR" variable (:constant-flag t) nil [6363 6383])
            ("Camellia_256_CBF_STR" variable (:constant-flag t) nil [6418 6438])
            ("Camellia_128_CBC_STR" variable (:constant-flag t) nil [6474 6494])
            ("Camellia_192_CBC_STR" variable (:constant-flag t) nil [6529 6549])
            ("Camellia_256_CBC_STR" variable (:constant-flag t) nil [6584 6604])
            ("Camellia_128_CTR_STR" variable (:constant-flag t) nil [6640 6660])
            ("Camellia_192_CTR_STR" variable (:constant-flag t) nil [6695 6715])
            ("Camellia_256_CTR_STR" variable (:constant-flag t) nil [6750 6770])
            ("Camellia_128_GCM_STR" variable (:constant-flag t) nil [6806 6826])
            ("Camellia_192_GCM_STR" variable (:constant-flag t) nil [6861 6881])
            ("Camellia_256_GCM_STR" variable (:constant-flag t) nil [6916 6936])
            ("Camellia_128_CCM_STR" variable (:constant-flag t) nil [6972 6992])
            ("Camellia_192_CCM_STR" variable (:constant-flag t) nil [7027 7047])
            ("Camellia_256_CCM_STR" variable (:constant-flag t) nil [7082 7102])
            ("ChaCha20_STR" variable (:constant-flag t) nil [7138 7150])
            ("RSA_STR" variable (:constant-flag t) nil [7406 7413])
            ("RSA_1024_STR" variable (:constant-flag t) nil [7440 7452])
            ("RSA_2048_STR" variable (:constant-flag t) nil [7479 7491])
            ("RSA_3072_STR" variable (:constant-flag t) nil [7518 7530])
            ("RSA_4096_STR" variable (:constant-flag t) nil [7557 7569])
            ("Curve25519_STR" variable (:constant-flag t) nil [7597 7611])
            ("Ed25519_STR" variable (:constant-flag t) nil [7638 7649])
            ("NIST_P256_STR" variable (:constant-flag t) nil [7677 7690])
            ("NIST_P384_STR" variable (:constant-flag t) nil [7717 7730])
            ("NIST_P521_STR" variable (:constant-flag t) nil [7757 7770])
            ("ECDSA_STR" variable (:constant-flag t) nil [7798 7807])
            ("SHA_1_STR" variable (:constant-flag t) nil [8589 8598])
            ("SHA_2_256_STR" variable (:constant-flag t) nil [8621 8634])
            ("SHA_2_384_STR" variable (:constant-flag t) nil [8657 8670])
            ("SHA_2_512_STR" variable (:constant-flag t) nil [8693 8706])
            ("SHA_3_256_STR" variable (:constant-flag t) nil [8730 8743])
            ("SHA_3_384_STR" variable (:constant-flag t) nil [8766 8779])
            ("SHA_3_512_STR" variable (:constant-flag t) nil [8802 8815])
            ("CBC_MAC_STR" variable (:constant-flag t) nil [9050 9061])
            ("CMAC_STR" variable (:constant-flag t) nil [9084 9092])
            ("GMAC_STR" variable (:constant-flag t) nil [9115 9123])
            ("HMAC_STR" variable (:constant-flag t) nil [9146 9154])
            ("DH_STR" variable (:constant-flag t) nil [9368 9374])
            ("ECDH_STR" variable (:constant-flag t) nil [9422 9430])
            ("HKDF_STR" variable (:constant-flag t) nil [9680 9688])
            ("PBKDF1_STR" variable (:constant-flag t) nil [9711 9721])
            ("PBKDF2_STR" variable (:constant-flag t) nil [9744 9754])
            ("PRF_STR" variable (:constant-flag t) nil [9777 9784])
            ("RSA_KEM_STR" variable (:constant-flag t) nil [10012 10023])
            ("ECIES_KEM_STR" variable (:constant-flag t) nil [10046 10059])
            ("PSEC_KEM_STR" variable (:constant-flag t) nil [10082 10094])
            ("ACE_KEM_STR" variable (:constant-flag t) nil [10117 10128])
            ("UNKNOWN_STR" variable (:constant-flag t) nil [10257 10268])
            ("ALG_START" variable (:constant-flag t) nil [10291 10300])
            ("RNG_START" variable (:constant-flag t) nil [10434 10443])
            ("DRNG_ID" variable (:constant-flag t) nil [10468 10475])
            ("TRNG_ID" variable (:constant-flag t) nil [10550 10557])
            ("RNG_END" variable (:constant-flag t) nil [10623 10630])
            ("SYMMETRIC_CIPHERS_START" variable (:constant-flag t) nil [10850 10873])
            ("AES_128_ID" variable (:constant-flag t) nil [10896 10906])
            ("AES_192_ID" variable (:constant-flag t) nil [10954 10964])
            ("AES_256_ID" variable (:constant-flag t) nil [11016 11026])
            ("AES_128_ECB_ID" variable (:constant-flag t) nil [11079 11093])
            ("AES_192_ECB_ID" variable (:constant-flag t) nil [11141 11155])
            ("AES_256_ECB_ID" variable (:constant-flag t) nil [11203 11217])
            ("AES_128_OFB_ID" variable (:constant-flag t) nil [11266 11280])
            ("AES_192_OFB_ID" variable (:constant-flag t) nil [11328 11342])
            ("AES_256_OFB_ID" variable (:constant-flag t) nil [11390 11404])
            ("AES_128_CFB_ID" variable (:constant-flag t) nil [11453 11467])
            ("AES_192_CFB_ID" variable (:constant-flag t) nil [11515 11529])
            ("AES_256_CFB_ID" variable (:constant-flag t) nil [11578 11592])
            ("AES_128_CBC_ID" variable (:constant-flag t) nil [11642 11656])
            ("AES_192_CBC_ID" variable (:constant-flag t) nil [11705 11719])
            ("AES_256_CBC_ID" variable (:constant-flag t) nil [11768 11782])
            ("AES_128_CTR_ID" variable (:constant-flag t) nil [11832 11846])
            ("AES_192_CTR_ID" variable (:constant-flag t) nil [11895 11909])
            ("AES_256_CTR_ID" variable (:constant-flag t) nil [11958 11972])
            ("AES_128_GCM_ID" variable (:constant-flag t) nil [12022 12036])
            ("AES_192_GCM_ID" variable (:constant-flag t) nil [12085 12099])
            ("AES_256_GCM_ID" variable (:constant-flag t) nil [12148 12162])
            ("AES_128_CCM_ID" variable (:constant-flag t) nil [12212 12226])
            ("AES_192_CCM_ID" variable (:constant-flag t) nil [12275 12289])
            ("AES_256_CCM_ID" variable (:constant-flag t) nil [12338 12352])
            ("AES_128_Poly1305_ID" variable (:constant-flag t) nil [12402 12421])
            ("AES_192_Poly1305_ID" variable (:constant-flag t) nil [12465 12484])
            ("AES_256_Poly1305_ID" variable (:constant-flag t) nil [12528 12547])
            ("Camellia_128_ID" variable (:constant-flag t) nil [12592 12607])
            ("Camellia_192_ID" variable (:constant-flag t) nil [12655 12670])
            ("Camellia_256_ID" variable (:constant-flag t) nil [12718 12733])
            ("Camellia_128_ECB_ID" variable (:constant-flag t) nil [12782 12801])
            ("Camellia_192_ECB_ID" variable (:constant-flag t) nil [12845 12864])
            ("Camellia_256_ECB_ID" variable (:constant-flag t) nil [12908 12927])
            ("Camellia_128_OFB_ID" variable (:constant-flag t) nil [12972 12991])
            ("Camellia_192_OFB_ID" variable (:constant-flag t) nil [13035 13054])
            ("Camellia_256_OFB_ID" variable (:constant-flag t) nil [13098 13117])
            ("Camellia_128_CBF_ID" variable (:constant-flag t) nil [13162 13181])
            ("Camellia_192_CBF_ID" variable (:constant-flag t) nil [13225 13244])
            ("Camellia_256_CBF_ID" variable (:constant-flag t) nil [13288 13307])
            ("Camellia_128_CBC_ID" variable (:constant-flag t) nil [13352 13371])
            ("Camellia_192_CBC_ID" variable (:constant-flag t) nil [13415 13434])
            ("Camellia_256_CBC_ID" variable (:constant-flag t) nil [13478 13497])
            ("Camellia_128_CTR_ID" variable (:constant-flag t) nil [13542 13561])
            ("Camellia_192_CTR_ID" variable (:constant-flag t) nil [13605 13624])
            ("Camellia_256_CTR_ID" variable (:constant-flag t) nil [13668 13687])
            ("Camellia_128_GCM_ID" variable (:constant-flag t) nil [13732 13751])
            ("Camellia_192_GCM_ID" variable (:constant-flag t) nil [13795 13814])
            ("Camellia_256_GCM_ID" variable (:constant-flag t) nil [13858 13877])
            ("Camellia_128_CCM_ID" variable (:constant-flag t) nil [13922 13941])
            ("Camellia_192_CCM_ID" variable (:constant-flag t) nil [13985 14004])
            ("Camellia_256_CCM_ID" variable (:constant-flag t) nil [14048 14067])
            ("ChaCha20_ID" variable (:constant-flag t) nil [14112 14123])
            ("SYMMETRIC_CIPHERS_END" variable (:constant-flag t) nil [14176 14197])
            ("SIGNATURE_START" variable (:constant-flag t) nil [14453 14468])
            ("RSA_ID" variable (:constant-flag t) nil [14510 14516])
            ("RSA_1024_ID" variable (:constant-flag t) nil [14556 14567])
            ("RSA_2048_ID" variable (:constant-flag t) nil [14606 14617])
            ("RSA_3072_ID" variable (:constant-flag t) nil [14656 14667])
            ("RSA_4096_ID" variable (:constant-flag t) nil [14706 14717])
            ("Curve25519_ID" variable (:constant-flag t) nil [14757 14770])
            ("Ed25519_ID" variable (:constant-flag t) nil [14807 14817])
            ("NIST_P256_ID" variable (:constant-flag t) nil [14858 14870])
            ("NIST_P384_ID" variable (:constant-flag t) nil [14908 14920])
            ("NIST_P521_ID" variable (:constant-flag t) nil [14958 14970])
            ("ECDSA_ID" variable (:constant-flag t) nil [15009 15017])
            ("SIGNATURE_END" variable (:constant-flag t) nil [15061 15074])
            ("HASH_START" variable (:constant-flag t) nil [15290 15300])
            ("SHA_1_ID" variable (:constant-flag t) nil [15335 15343])
            ("SHA_2_256_ID" variable (:constant-flag t) nil [15373 15385])
            ("SHA_2_384_ID" variable (:constant-flag t) nil [15414 15426])
            ("SHA_2_512_ID" variable (:constant-flag t) nil [15455 15467])
            ("SHA_3_256_ID" variable (:constant-flag t) nil [15497 15509])
            ("SHA_3_384_ID" variable (:constant-flag t) nil [15538 15550])
            ("SHA_3_512_ID" variable (:constant-flag t) nil [15579 15591])
            ("HASH_END" variable (:constant-flag t) nil [15621 15629])
            ("MSG_AUTH_START" variable (:constant-flag t) nil [15863 15877])
            ("CBC_MAC_ID" variable (:constant-flag t) nil [15903 15913])
            ("CMAC_ID" variable (:constant-flag t) nil [15944 15951])
            ("GMAC_ID" variable (:constant-flag t) nil [15989 15996])
            ("HMAC_ID" variable (:constant-flag t) nil [16034 16041])
            ("MSG_AUTH_END" variable (:constant-flag t) nil [16080 16092])
            ("KEY_AGREE_START" variable (:constant-flag t) nil [16303 16318])
            ("DH_ID" variable (:constant-flag t) nil [16351 16356])
            ("ECDH_ID" variable (:constant-flag t) nil [16422 16429])
            ("KEY_AGREE_END" variable (:constant-flag t) nil [16497 16510])
            ("KEY_DERIVATION_START" variable (:constant-flag t) nil [16734 16754])
            ("HKDF_ID" variable (:constant-flag t) nil [16787 16794])
            ("PBKDF1_ID" variable (:constant-flag t) nil [16833 16842])
            ("PBKDF2_ID" variable (:constant-flag t) nil [16883 16892])
            ("PRF_ID" variable (:constant-flag t) nil [16933 16939])
            ("KEY_DERIVATION_END" variable (:constant-flag t) nil [16984 17002])
            ("KEY_ENCAPSULATION_START" variable (:constant-flag t) nil [17224 17247])
            ("RSA_KEM_ID" variable (:constant-flag t) nil [17286 17296])
            ("ECIES_KEM_ID" variable (:constant-flag t) nil [17348 17360])
            ("PSEC_KEM_ID" variable (:constant-flag t) nil [17414 17425])
            ("ACE_KEM_ID" variable (:constant-flag t) nil [17480 17490])
            ("KEY_ENCAPSULATION_END" variable (:constant-flag t) nil [17547 17568])
            ("ALG_END" variable (:constant-flag t) nil [17680 17687])
            ("SHA_HASH_DIGEST_LENGTH" variable (:constant-flag t) nil [17839 17861])
            ("SHA224_HASH_DIGEST_LENGTH" variable (:constant-flag t) nil [17879 17904])
            ("SHA256_HASH_DIGEST_LENGTH" variable (:constant-flag t) nil [17919 17944])
            ("SHA384_HASH_DIGEST_LENGTH" variable (:constant-flag t) nil [17959 17984])
            ("SHA512_HASH_DIGEST_LENGTH" variable (:constant-flag t) nil [17999 18024])
            ("lsar" type
               (:members 
                  ( ("crypto" type
                       (:members 
                          ( ("s_CryptoTaget_map" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "{
            {SIG_STR, SIG_ID},
            {VER_STR, VER_ID},
            {ENC_STR, ENC_ID},
            {DEC_STR, DEC_ID},
            {KEM_STR, KEM_ID},
            {RNG_STR, RNG_ID},
            {HASH_STR, HASH_ID},
            {MAC_STR, MAC_ID},
            {KDF_STR, KDF_ID}
        }"
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil)
                                          ("uint64_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [18171 18528])
                            ("s_CryptoAlg_map" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "{

            // Random Number Generation
            {DRNG_STR, DRNG_ID},
            {TRNG_STR, TRNG_ID},

            // Symmetric Ciphers
            {AES_128_STR, AES_128_ID},
            {AES_192_STR, AES_192_ID},
            {AES_256_STR, AES_256_ID},

            {AES_128_ECB_STR, AES_128_ECB_ID},
            {AES_192_ECB_STR, AES_192_ECB_ID},
            {AES_256_ECB_STR, AES_256_ECB_ID},

            {AES_128_OFB_STR, AES_128_OFB_ID},
            {AES_192_OFB_STR, AES_192_OFB_ID},
            {AES_256_OFB_STR, AES_256_OFB_ID},

            {AES_128_CFB_STR, AES_128_CFB_ID},
            {AES_192_CFB_STR, AES_192_CFB_ID},
            {AES_256_CFB_STR, AES_256_CFB_ID},

            {AES_128_CBC_STR, AES_128_CBC_ID},
            {AES_192_CBC_STR, AES_192_CBC_ID},
            {AES_256_CBC_STR, AES_256_CBC_ID},

            {AES_128_CTR_STR, AES_128_CTR_ID},
            {AES_192_CTR_STR, AES_192_CTR_ID},
            {AES_256_CTR_STR, AES_256_CTR_ID},

            {AES_128_GCM_STR, AES_128_GCM_ID},
            {AES_192_GCM_STR, AES_192_GCM_ID},
            {AES_256_GCM_STR, AES_256_GCM_ID},

            {AES_128_CCM_STR, AES_128_CCM_ID},
            {AES_192_CCM_STR, AES_192_CCM_ID},
            {AES_256_CCM_STR, AES_256_CCM_ID},

            {AES_128_Poly1305_STR, AES_128_Poly1305_ID},
            {AES_192_Poly1305_STR, AES_192_Poly1305_ID},
            {AES_256_Poly1305_STR, AES_256_Poly1305_ID},

            {Camellia_128_STR, Camellia_128_ID},
            {Camellia_192_STR, Camellia_192_ID},
            {Camellia_256_STR, Camellia_256_ID},

            {Camellia_128_ECB_STR, Camellia_128_ECB_ID},
            {Camellia_192_ECB_STR, Camellia_192_ECB_ID},
            {Camellia_256_ECB_STR, Camellia_256_ECB_ID},

            {Camellia_128_OFB_STR, Camellia_128_OFB_ID},
            {Camellia_192_OFB_STR, Camellia_192_OFB_ID},
            {Camellia_256_OFB_STR, Camellia_256_OFB_ID},

            {Camellia_128_CBF_STR, Camellia_128_CBF_ID},
            {Camellia_192_CBF_STR, Camellia_192_CBF_ID},
            {Camellia_256_CBF_STR, Camellia_256_CBF_ID},

            {Camellia_128_CBC_STR, Camellia_128_CBC_ID},
            {Camellia_192_CBC_STR, Camellia_192_CBC_ID},
            {Camellia_256_CBC_STR, Camellia_256_CBC_ID},

            {Camellia_128_CTR_STR, Camellia_128_CTR_ID},
            {Camellia_192_CTR_STR, Camellia_192_CTR_ID},
            {Camellia_256_CTR_STR, Camellia_256_CTR_ID},

            {Camellia_128_GCM_STR, Camellia_128_GCM_ID},
            {Camellia_192_GCM_STR, Camellia_192_GCM_ID},
            {Camellia_256_GCM_STR, Camellia_256_GCM_ID},

            {Camellia_128_CCM_STR, Camellia_128_CCM_ID},
            {Camellia_192_CCM_STR, Camellia_192_CCM_ID},
            {Camellia_256_CCM_STR, Camellia_256_CCM_ID},

            {ChaCha20_STR, ChaCha20_ID},


            // Asymmetric Encryption/Decryption and Signature Handling
            {RSA_STR, RSA_ID},
            {RSA_1024_STR, RSA_1024_ID},
            {RSA_2048_STR, RSA_2048_ID},
            {RSA_3072_STR, RSA_3072_ID},
            {RSA_4096_STR, RSA_4096_ID},

            {Curve25519_STR, Curve25519_ID},
            {Ed25519_STR, Ed25519_ID},

            {NIST_P256_STR, NIST_P256_ID},
            {NIST_P384_STR, NIST_P384_ID},
            {NIST_P521_STR, NIST_P521_ID},

            {ECDSA_STR, ECDSA_ID},


            // Hash Functions
            {SHA_1_STR, SHA_1_ID},

            {SHA_2_256_STR, SHA_2_256_ID},
            {SHA_2_384_STR, SHA_2_384_ID},
            {SHA_2_512_STR, SHA_2_512_ID},

            {SHA_3_256_STR, SHA_3_256_ID},
            {SHA_3_384_STR, SHA_3_384_ID},
            {SHA_3_512_STR, SHA_3_512_ID},


            // Message Authentication Code
            {CBC_MAC_STR, CBC_MAC_ID},
            {CMAC_STR, CMAC_ID},
            {GMAC_STR, GMAC_ID},
            {HMAC_STR, HMAC_ID},


            // Key Agreement
            {DH_STR, DH_ID},
            {ECDH_STR, ECDH_ID},


            // Key Derivation Function
            {HKDF_STR, HKDF_ID},
            {PBKDF1_STR, PBKDF1_ID},
            {PBKDF2_STR, PBKDF2_ID},
            {PRF_STR, PRF_ID},


            // Key Encapsulation Mechanism
            {RSA_KEM_STR, RSA_KEM_ID},
            {ECIES_KEM_STR, ECIES_KEM_ID},
            {PSEC_KEM_STR, PSEC_KEM_ID},
            {ACE_KEM_STR, ACE_KEM_ID},
        }"
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil)
                                          ("uint64_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [18538 22939])
                            ("s_CryptoPadding_map" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "{
            {PKCS1_V2_2_STR, PKCS1_V2_2_ID},
#ifdef ICAS3_ADAPTER
            {PSS_PKCS1_V2_1_STR, PSS_PKCS1_V2_1_ID},
            {PSS_PKCS1_v2_1_STR, PSS_PKCS1_v2_1_ID},
#endif
            {PKCS1_V1_5_STR, PKCS1_V1_5_ID}
        }"
                                :type ("std::map" type
                                     (:template-specifier 
                                        ( ("std::string" type nil nil nil)
                                          ("uint64_t" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [22949 23251]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [18139 23258]))                  
                :type "namespace")
                nil [18118 23260]))          
      :file "baseIdTypesImpl.h"
      :pointmax 23312
      :fsize 23311
      :lastmodtime '(24287 13656 155325 378000)
      :unmatched-syntax nil
      :lexical-table 
        '(("CRYPTO_PROVIDER_NAME" . ((string "\"CryptoProvider\"" 755 . 771)))
          ("DEC_ID" . ((semantic-list "(TARGET_START+(4))" 2611 . 2629)))
          ("AES_192_CTR_STR" . ((string "\"AES-192-CTR\"" 5333 . 5346)))
          ("AES_128_GCM_STR" . ((string "\"AES-128-GCM\"" 5426 . 5439)))
          ("Camellia_256_ECB_STR" . ((string "\"Camellia-256-ECB\"" 6114 . 6132)))
          ("Camellia_128_CBF_STR" . ((string "\"Camellia-128-CBF\"" 6336 . 6354)))
          ("Camellia_192_GCM_STR" . ((string "\"Camellia-192-GCM\"" 6889 . 6907)))
          ("RSA_KEM_STR" . ((string "\"RSA-KEM\"" 10028 . 10037)))
          ("ECIES_KEM_STR" . ((string "\"ECIES-KEM\"" 10062 . 10073)))
          ("RNG_START" . ((symbol "ALG_START" 10450 . 10459)))
          ("RNG_END" . ((symbol "TRNG_ID" 10639 . 10646)))
          ("SYMMETRIC_CIPHERS_START" . ((semantic-list "(RNG_END+(1))" 10874 . 10887)))
          ("AES_192_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(1))" 10978 . 11007)))
          ("AES_128_Poly1305_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(24))" 12426 . 12456)))
          ("Camellia_256_CBF_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(38))" 13312 . 13342)))
          ("HASH_START" . ((semantic-list "(SIGNATURE_END+(1))" 15306 . 15325)))
          ("SHA_3_384_ID" . ((semantic-list "(HASH_START+(5))" 15554 . 15570)))
          ("HASH_END" . ((symbol "SHA_3_512_ID" 15637 . 15649)))
          ("PSEC_KEM_ID" . ((semantic-list "(KEY_ENCAPSULATION_START+(2))" 17442 . 17471)))
          ("RNG_ID" . ((semantic-list "(TARGET_START+(6))" 2768 . 2786)))
          ("HASH_ID" . ((semantic-list "(TARGET_START+(7))" 2845 . 2863)))
          ("AES_192_CBC_STR" . ((string "\"AES-192-CBC\"" 5194 . 5207)))
          ("AES_256_GCM_STR" . ((string "\"AES-256-GCM\"" 5518 . 5531)))
          ("AES_192_CCM_STR" . ((string "\"AES-192-CCM\"" 5611 . 5624)))
          ("AES_192_Poly1305_STR" . ((string "\"AES-192-Poly1305\"" 5755 . 5773)))
          ("Camellia_256_CBF_STR" . ((string "\"Camellia-256-CBF\"" 6446 . 6464)))
          ("Ed25519_STR" . ((string "\"Ed25519\"" 7658 . 7667)))
          ("SHA_2_512_STR" . ((string "\"SHA-2-512\"" 8709 . 8720)))
          ("HKDF_STR" . ((string "\"HKDF\"" 9696 . 9702)))
          ("AES_256_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(2))" 11040 . 11069)))
          ("AES_128_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(6))" 11290 . 11319)))
          ("Camellia_192_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(31))" 12869 . 12899)))
          ("Camellia_128_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(39))" 13376 . 13406)))
          ("Camellia_256_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(44))" 13692 . 13722)))
          ("Camellia_128_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(48))" 13946 . 13976)))
          ("SIGNATURE_START" . ((semantic-list "(SYMMETRIC_CIPHERS_END+(1))" 14473 . 14500)))
          ("DH_ID" . ((semantic-list "(KEY_AGREE_START)" 16371 . 16388)))
          ("KEY_AGREE_END" . ((symbol "ECDH_ID" 16517 . 16524)))
          ("SHA_HASH_DIGEST_LENGTH" . ((number "20" 17868 . 17870)))
          ("SHA256_HASH_DIGEST_LENGTH" . ((number "32" 17948 . 17950)))
          ("LSAR_CRYPTO_COMMON_BASE_ID_TYPES_IMPL_H_")
          ("GENERATE_TARGET" (spp-arg-list ("x") 1191 . 1194) . ((semantic-list "((x) * MAIN_ALG_MASK)" 1201 . 1222)))
          ("RNG_STR" . ((string "\"RNG\"" 2117 . 2122)))
          ("HASH_STR" . ((string "\"HASH\"" 2179 . 2185)))
          ("PKCS1_V1_5_ID" . ((semantic-list "(PADDING_START+(2))" 3977 . 3996)))
          ("AES_256_STR" . ((string "\"AES-256\"" 4688 . 4697)))
          ("AES_128_OFB_STR" . ((string "\"AES-128-OFB\"" 4870 . 4883)))
          ("Camellia_192_OFB_STR" . ((string "\"Camellia-192-OFB\"" 6225 . 6243)))
          ("DH_STR" . ((string "\"DH\"" 9384 . 9388)))
          ("AES_256_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(5))" 11227 . 11256)))
          ("AES_192_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(19))" 12109 . 12139)))
          ("AES_192_Poly1305_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(25))" 12489 . 12519)))
          ("ECDSA_ID" . ((semantic-list "(SIGNATURE_START+(10))" 15029 . 15051)))
          ("KEY_ENCAPSULATION_END" . ((symbol "ACE_KEM_ID" 17575 . 17585)))
          ("ENC_STR" . ((string "\"ENC\"" 1930 . 1935)))
          ("AES_256_OFB_STR" . ((string "\"AES-256-OFB\"" 4962 . 4975)))
          ("AES_128_CFB_STR" . ((string "\"AES-128-CFB\"" 5009 . 5022)))
          ("Camellia_128_STR" . ((string "\"Camellia-128\"" 5858 . 5872)))
          ("Camellia_128_CTR_STR" . ((string "\"Camellia-128-CTR\"" 6668 . 6686)))
          ("RSA_STR" . ((string "\"RSA\"" 7426 . 7431)))
          ("RSA_3072_STR" . ((string "\"RSA-3072\"" 7538 . 7548)))
          ("SHA_2_384_STR" . ((string "\"SHA-2-384\"" 8673 . 8684)))
          ("SHA_3_256_STR" . ((string "\"SHA-3-256\"" 8746 . 8757)))
          ("GMAC_STR" . ((string "\"GMAC\"" 9131 . 9137)))
          ("ECDH_STR" . ((string "\"ECDH\"" 9438 . 9444)))
          ("AES_192_CFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(10))" 11539 . 11569)))
          ("AES_128_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(15))" 11856 . 11886)))
          ("AES_256_Poly1305_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(26))" 12552 . 12582)))
          ("Camellia_128_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(33))" 12996 . 13026)))
          ("SYMMETRIC_CIPHERS_END" . ((symbol "ChaCha20_ID" 14200 . 14211)))
          ("SIGNATURE_END" . ((symbol "ECDSA_ID" 15081 . 15089)))
          ("SHA_1_ID" . ((semantic-list "(HASH_START)" 15351 . 15363)))
          ("PBKDF1_ID" . ((semantic-list "(KEY_DERIVATION_START+(1))" 16848 . 16874)))
          ("ACE_KEM_ID" . ((semantic-list "(KEY_ENCAPSULATION_START+(3))" 17508 . 17537)))
          ("SHA224_HASH_DIGEST_LENGTH" . ((number "28" 17908 . 17910)))
          ("KEY_STORAGE_PROVIDER_NAME" . ((string "\"KeyStorageProvider\"" 806 . 826)))
          ("MAIN_ALG_MASK" . ((semantic-list "(100000000)" 1521 . 1532)))
          ("MAC_ID" . ((semantic-list "(TARGET_START+(8))" 2907 . 2925)))
          ("TARGET_END" . ((symbol "KDF_ID" 3067 . 3073)))
          ("AES_128_ECB_STR" . ((string "\"AES-128-ECB\"" 4731 . 4744)))
          ("AES_256_CFB_STR" . ((string "\"AES-256-CFB\"" 5101 . 5114)))
          ("AES_256_Poly1305_STR" . ((string "\"AES-256-Poly1305\"" 5806 . 5824)))
          ("Camellia_192_ECB_STR" . ((string "\"Camellia-192-ECB\"" 6059 . 6077)))
          ("Camellia_128_CBC_STR" . ((string "\"Camellia-128-CBC\"" 6502 . 6520)))
          ("Camellia_256_CTR_STR" . ((string "\"Camellia-256-CTR\"" 6778 . 6796)))
          ("Camellia_128_CCM_STR" . ((string "\"Camellia-128-CCM\"" 7000 . 7018)))
          ("RSA_2048_STR" . ((string "\"RSA-2048\"" 7499 . 7509)))
          ("CMAC_STR" . ((string "\"CMAC\"" 9100 . 9106)))
          ("UNKNOWN_STR" . ((string "\"UNKNOWN\"" 10272 . 10281)))
          ("DRNG_ID" . ((semantic-list "(RNG_START+(1))" 10484 . 10499)))
          ("Camellia_128_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(27))" 12616 . 12646)))
          ("Camellia_256_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(32))" 12932 . 12962)))
          ("Camellia_128_CBF_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(36))" 13186 . 13216)))
          ("Camellia_192_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(46))" 13819 . 13849)))
          ("ChaCha20_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(51))" 14136 . 14166)))
          ("Curve25519_ID" . ((semantic-list "(SIGNATURE_START+(5))" 14777 . 14798)))
          ("NIST_P256_ID" . ((semantic-list "(SIGNATURE_START+(7))" 14878 . 14899)))
          ("NIST_P521_ID" . ((semantic-list "(SIGNATURE_START+(9))" 14978 . 14999)))
          ("MSG_AUTH_END" . ((symbol "HMAC_ID" 16096 . 16103)))
          ("PBKDF2_ID" . ((semantic-list "(KEY_DERIVATION_START+(2))" 16898 . 16924)))
          ("ALG_END" . ((symbol "KEY_ENCAPSULATION_END" 17696 . 17717)))
          ("SHA384_HASH_DIGEST_LENGTH" . ((number "48" 17988 . 17990)))
          ("PKCS1_V1_5_STR" . ((string "\"PKCS1.v1.5\"" 3548 . 3560)))
          ("AES_256_ECB_STR" . ((string "\"AES-256-ECB\"" 4823 . 4836)))
          ("AES_192_GCM_STR" . ((string "\"AES-192-GCM\"" 5472 . 5485)))
          ("Camellia_192_CBF_STR" . ((string "\"Camellia-192-CBF\"" 6391 . 6409)))
          ("Camellia_256_CBC_STR" . ((string "\"Camellia-256-CBC\"" 6612 . 6630)))
          ("Camellia_256_CCM_STR" . ((string "\"Camellia-256-CCM\"" 7110 . 7128)))
          ("ECDSA_STR" . ((string "\"ECDSA\"" 7818 . 7825)))
          ("AES_192_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(13))" 11729 . 11759)))
          ("AES_256_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(20))" 12172 . 12202)))
          ("AES_192_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(22))" 12299 . 12329)))
          ("Camellia_128_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(42))" 13566 . 13596)))
          ("Ed25519_ID" . ((semantic-list "(SIGNATURE_START+(6))" 14827 . 14848)))
          ("SHA_2_512_ID" . ((semantic-list "(HASH_START+(3))" 15471 . 15487)))
          ("HKDF_ID" . ((semantic-list "(KEY_DERIVATION_START)" 16802 . 16824)))
          ("KEY_ENCAPSULATION_START" . ((semantic-list "(KEY_DERIVATION_END+(1))" 17252 . 17276)))
          ("UNKNOWN_ID" . ((semantic-list "(0)" 887 . 890)))
          ("GENERATE_MAIN_ALG" (spp-arg-list ("x") 1248 . 1251) . ((semantic-list "((x) * SUB_ALG_MASK)" 1256 . 1276)))
          ("PADDING_MASK" . ((semantic-list "(100)" 1590 . 1595)))
          ("KDF_STR" . ((string "\"KDF\"" 2293 . 2298)))
          ("AES_128_STR" . ((string "\"AES-128\"" 4612 . 4621)))
          ("HMAC_STR" . ((string "\"HMAC\"" 9162 . 9168)))
          ("AES_128_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(3))" 11103 . 11132)))
          ("AES_256_CFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(11))" 11602 . 11632)))
          ("Camellia_192_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(28))" 12679 . 12709)))
          ("RSA_2048_ID" . ((semantic-list "(SIGNATURE_START+(2))" 14626 . 14647)))
          ("CMAC_ID" . ((semantic-list "(MSG_AUTH_START+(1))" 15960 . 15980)))
          ("GET_SUB_ALG" (spp-arg-list ("x") 1071 . 1074) . ((semantic-list "(((x) % SUB_ALG_MASK) / PADDING_MASK)" 1080 . 1117)))
          ("PADDING_END" . ((symbol "PKCS1_V1_5_ID" 4029 . 4042)))
          ("TRNG_STR" . ((string "\"TRNG\"" 4349 . 4355)))
          ("AES_192_OFB_STR" . ((string "\"AES-192-OFB\"" 4916 . 4929)))
          ("NIST_P384_STR" . ((string "\"NIST-P384\"" 7737 . 7748)))
          ("SHA_2_256_STR" . ((string "\"SHA-2-256\"" 8637 . 8648)))
          ("PRF_STR" . ((string "\"PRF\"" 9793 . 9798)))
          ("TRNG_ID" . ((semantic-list "(RNG_START+(2))" 10566 . 10581)))
          ("AES_192_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(7))" 11352 . 11381)))
          ("Camellia_256_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(29))" 12742 . 12772)))
          ("Camellia_192_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(40))" 13439 . 13469)))
          ("Camellia_256_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(47))" 13882 . 13912)))
          ("Camellia_192_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(49))" 14009 . 14039)))
          ("NIST_P384_ID" . ((semantic-list "(SIGNATURE_START+(8))" 14928 . 14949)))
          ("SHA_2_256_ID" . ((semantic-list "(HASH_START+(1))" 15389 . 15405)))
          ("PRF_ID" . ((semantic-list "(KEY_DERIVATION_START+(3))" 16948 . 16974)))
          ("GENERATE_SUB_ALG" (spp-arg-list ("x") 1301 . 1304) . ((semantic-list "((x) * PADDING_MASK)" 1310 . 1330)))
          ("SIG_ID" . ((semantic-list "(TARGET_START+(1))" 2385 . 2403)))
          ("VER_ID" . ((semantic-list "(TARGET_START+(2))" 2459 . 2477)))
          ("KEM_ID" . ((semantic-list "(TARGET_START+(5))" 2686 . 2704)))
          ("PKCS1_V2_2_ID" . ((semantic-list "(PADDING_START+(1))" 3925 . 3944)))
          ("AES_192_CFB_STR" . ((string "\"AES-192-CFB\"" 5055 . 5068)))
          ("AES_128_CTR_STR" . ((string "\"AES-128-CTR\"" 5287 . 5300)))
          ("AES_128_Poly1305_STR" . ((string "\"AES-128-Poly1305\"" 5704 . 5722)))
          ("Camellia_192_CTR_STR" . ((string "\"Camellia-192-CTR\"" 6723 . 6741)))
          ("Camellia_128_GCM_STR" . ((string "\"Camellia-128-GCM\"" 6834 . 6852)))
          ("SHA_1_STR" . ((string "\"SHA-1\"" 8605 . 8612)))
          ("PBKDF1_STR" . ((string "\"PBKDF1\"" 9727 . 9735)))
          ("ACE_KEM_STR" . ((string "\"ACE-KEM\"" 10133 . 10142)))
          ("AES_256_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(14))" 11792 . 11822)))
          ("AES_256_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(23))" 12362 . 12392)))
          ("Camellia_128_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(30))" 12806 . 12836)))
          ("RSA_1024_ID" . ((semantic-list "(SIGNATURE_START+(1))" 14576 . 14597)))
          ("RSA_4096_ID" . ((semantic-list "(SIGNATURE_START+(4))" 14726 . 14747)))
          ("SHA_3_512_ID" . ((semantic-list "(HASH_START+(6))" 15595 . 15611)))
          ("UNSUPPORTED_DIGEST_LENGTH" . ((semantic-list "(0)" 863 . 866)))
          ("SUB_ALG_MASK" . ((semantic-list "(100000)" 1557 . 1565)))
          ("MAIN_DELEMETER" . ((string "\"/\"" 1626 . 1629)))
          ("AES_192_ECB_STR" . ((string "\"AES-192-ECB\"" 4777 . 4790)))
          ("AES_128_CBC_STR" . ((string "\"AES-128-CBC\"" 5148 . 5161)))
          ("AES_256_CTR_STR" . ((string "\"AES-256-CTR\"" 5379 . 5392)))
          ("AES_128_CCM_STR" . ((string "\"AES-128-CCM\"" 5565 . 5578)))
          ("Camellia_192_STR" . ((string "\"Camellia-192\"" 5905 . 5919)))
          ("Camellia_192_CBC_STR" . ((string "\"Camellia-192-CBC\"" 6557 . 6575)))
          ("Camellia_256_GCM_STR" . ((string "\"Camellia-256-GCM\"" 6944 . 6962)))
          ("Camellia_192_CCM_STR" . ((string "\"Camellia-192-CCM\"" 7055 . 7073)))
          ("CBC_MAC_STR" . ((string "\"CBC-MAC\"" 9066 . 9075)))
          ("AES_192_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(16))" 11919 . 11949)))
          ("AES_128_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(18))" 12046 . 12076)))
          ("Camellia_192_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(34))" 13059 . 13089)))
          ("KEY_AGREE_START" . ((semantic-list "(MSG_AUTH_END+(1))" 16323 . 16341)))
          ("KEY_DERIVATION_END" . ((symbol "PRF_ID" 17004 . 17010)))
          ("RSA_KEM_ID" . ((semantic-list "(KEY_ENCAPSULATION_START)" 17314 . 17339)))
          ("ECIES_KEM_ID" . ((semantic-list "(KEY_ENCAPSULATION_START+(1))" 17376 . 17405)))
          ("HASH_ALG_MASK" (spp-arg-list ("x") 913 . 916) . ((symbol "GET_MAIN_ALG" 920 . 932) (semantic-list "(x)" 932 . 935)))
          ("GET_ALG_ID" (spp-arg-list ("a" "b" "c" "d") 1388 . 1400) . ((semantic-list "((a*TARGET_MASK) + (b*SUB_ALG_MASK) + (c*PADDING_MASK) +d)" 1401 . 1459)))
          ("TARGET_MASK" . ((semantic-list "(100000000)" 1485 . 1496)))
          ("SIG_STR" . ((string "\"SIG\"" 1809 . 1814)))
          ("VER_STR" . ((string "\"VER\"" 1868 . 1873)))
          ("KEM_STR" . ((string "\"KEM\"" 2050 . 2055)))
          ("TARGET_START" . ((semantic-list "(0)" 2357 . 2360)))
          ("ENC_ID" . ((semantic-list "(TARGET_START+(3))" 2536 . 2554)))
          ("PKCS1_V2_2_STR" . ((string "\"PKCS1.v2.2\"" 3505 . 3517)))
          ("AES_256_CBC_STR" . ((string "\"AES-256-CBC\"" 5240 . 5253)))
          ("AES_256_CCM_STR" . ((string "\"AES-256-CCM\"" 5657 . 5670)))
          ("Camellia_128_OFB_STR" . ((string "\"Camellia-128-OFB\"" 6170 . 6188)))
          ("RSA_1024_STR" . ((string "\"RSA-1024\"" 7460 . 7470)))
          ("RSA_4096_STR" . ((string "\"RSA-4096\"" 7577 . 7587)))
          ("SHA_3_512_STR" . ((string "\"SHA-3-512\"" 8818 . 8829)))
          ("ALG_START" . ((semantic-list "(0)" 10307 . 10310)))
          ("AES_256_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(8))" 11414 . 11443)))
          ("AES_128_CFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(0))" 11477 . 11506)))
          ("Camellia_192_CBF_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(37))" 13249 . 13279)))
          ("Camellia_256_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(41))" 13502 . 13532)))
          ("Camellia_256_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(50))" 14072 . 14102)))
          ("RSA_ID" . ((semantic-list "(SIGNATURE_START)" 14530 . 14547)))
          ("RSA_3072_ID" . ((semantic-list "(SIGNATURE_START+(3))" 14676 . 14697)))
          ("SHA_2_384_ID" . ((semantic-list "(HASH_START+(2))" 15430 . 15446)))
          ("SHA_3_256_ID" . ((semantic-list "(HASH_START+(4))" 15513 . 15529)))
          ("MSG_AUTH_START" . ((semantic-list "(HASH_END+(1))" 15879 . 15893)))
          ("GMAC_ID" . ((semantic-list "(MSG_AUTH_START+(2))" 16005 . 16025)))
          ("ECDH_ID" . ((semantic-list "(KEY_AGREE_START+(1))" 16442 . 16463)))
          ("GET_PADDING" (spp-arg-list ("x") 1137 . 1140) . ((semantic-list "((x) % PADDING_MASK)" 1146 . 1166)))
          ("SUB_DELEMETER" . ((string "\",\"" 1658 . 1661)))
          ("MAC_STR" . ((string "\"MAC\"" 2226 . 2231)))
          ("KDF_ID" . ((semantic-list "(TARGET_START+(9))" 2989 . 3007)))
          ("PADDING_START" . ((semantic-list "(0)" 3602 . 3605)))
          ("DRNG_STR" . ((string "\"DRNG\"" 4276 . 4282)))
          ("Camellia_256_OFB_STR" . ((string "\"Camellia-256-OFB\"" 6280 . 6298)))
          ("ChaCha20_STR" . ((string "\"ChaCha20\"" 7154 . 7164)))
          ("Curve25519_STR" . ((string "\"Curve25519\"" 7617 . 7629)))
          ("NIST_P256_STR" . ((string "\"NIST-P256\"" 7697 . 7708)))
          ("NIST_P521_STR" . ((string "\"NIST-P521\"" 7777 . 7788)))
          ("PBKDF2_STR" . ((string "\"PBKDF2\"" 9760 . 9768)))
          ("AES_128_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START)" 10920 . 10945)))
          ("Camellia_192_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(43))" 13629 . 13659)))
          ("Camellia_128_GCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(45))" 13756 . 13786)))
          ("HMAC_ID" . ((semantic-list "(MSG_AUTH_START+(3))" 16050 . 16070)))
          ("KEY_DERIVATION_START" . ((semantic-list "(KEY_AGREE_END+(1))" 16758 . 16777)))
          ("GET_TARGET" (spp-arg-list ("x") 955 . 958) . ((semantic-list "((x) / TARGET_MASK)" 965 . 984)))
          ("GET_MAIN_ALG" (spp-arg-list ("x") 1005 . 1008) . ((semantic-list "(((x) % MAIN_ALG_MASK) / SUB_ALG_MASK)" 1013 . 1051)))
          ("GENERATE_PADDING" (spp-arg-list ("x") 1355 . 1358) . ((semantic-list "(x)" 1364 . 1367)))
          ("DEC_STR" . ((string "\"DEC\"" 1990 . 1995)))
          ("AES_192_STR" . ((string "\"AES-192\"" 4650 . 4659)))
          ("Camellia_256_STR" . ((string "\"Camellia-256\"" 5952 . 5966)))
          ("Camellia_128_ECB_STR" . ((string "\"Camellia-128-ECB\"" 6004 . 6022)))
          ("SHA_3_384_STR" . ((string "\"SHA-3-384\"" 8782 . 8793)))
          ("PSEC_KEM_STR" . ((string "\"PSEC-KEM\"" 10098 . 10108)))
          ("AES_192_ECB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(4))" 11165 . 11194)))
          ("AES_128_CBC_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(12))" 11666 . 11696)))
          ("AES_256_CTR_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(17))" 11982 . 12012)))
          ("AES_128_CCM_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(21))" 12236 . 12266)))
          ("Camellia_256_OFB_ID" . ((semantic-list "(SYMMETRIC_CIPHERS_START+(35))" 13122 . 13152)))
          ("CBC_MAC_ID" . ((semantic-list "(MSG_AUTH_START)" 15919 . 15935)))
          ("SHA512_HASH_DIGEST_LENGTH" . ((number "64" 18028 . 18030)))
          )
)
    (semanticdb-table "semanticdb-table-1d42f30"
      :major-mode c-mode
      :tags 
        '( ("LSAR_CRYPTO_COMMON_GLOBAL_H_" variable (:constant-flag t) nil [611 639])
            ("MAX_PAYLOAD" variable (:constant-flag t) nil [649 660])
            ("MAX_OBJ_SIZE" variable (:constant-flag t) nil [676 688])
            ("MAX_PRF_PAYLOAD" variable (:constant-flag t) nil [710 725])
            ("SESSION_TRUE" variable (:constant-flag t) nil [742 754])
            ("SESSION_FALSE" variable (:constant-flag t) nil [773 786])
            ("EXPORTABLE_TRUE" variable (:constant-flag t) nil [806 821])
            ("EXPORTABLE_FALSE" variable (:constant-flag t) nil [840 856])
            ("EMPTY_UUID" variable (:constant-flag t) nil [876 886])
            ("TYPE_IGNORE" variable (:constant-flag t) nil [949 960])
            ("TYPE_CRYPTO_PROVIDER" variable (:constant-flag t) nil [989 1009])
            ("TYPE_KEY_STORAGE_PROVIDER" variable (:constant-flag t) nil [1029 1054])
            ("TYPE_STR" variable (:constant-flag t) nil [1070 1078])
            ("UUID_STR" variable (:constant-flag t) nil [1101 1109])
            ("PORT_STR" variable (:constant-flag t) nil [1132 1140])
            ("CRYPTO_PROVIDER_STR" variable (:constant-flag t) nil [1164 1183])
            ("KEY_STORAGE_PROVIDER_STR" variable (:constant-flag t) nil [1217 1241])
            ("PROVIDER_INFO_STR" variable (:constant-flag t) nil [1275 1292])
            ("CRYPTO_LOCAL_PROVIDER" variable (:constant-flag t) nil [1320 1341]))          
      :file "cryptoGlobal.h"
      :pointmax 1356
      :fsize 1355
      :lastmodtime '(24287 13656 155325 378000)
      :unmatched-syntax nil
      :lexical-table 
        '(("TYPE_STR" . ((string "\"type\"" 1086 . 1092)))
          ("MAX_PAYLOAD" . ((semantic-list "(8192)" 661 . 667)))
          ("PORT_STR" . ((string "\"port\"" 1148 . 1154)))
          ("KEY_STORAGE_PROVIDER_STR" . ((string "\"keyStorageProvider\"" 1245 . 1265)))
          ("SESSION_TRUE" . ((semantic-list "(true)" 758 . 764)))
          ("EXPORTABLE_TRUE" . ((semantic-list "(true)" 825 . 831)))
          ("TYPE_CRYPTO_PROVIDER" . ((semantic-list "(1)" 1017 . 1020)))
          ("CRYPTO_LOCAL_PROVIDER" . ((semantic-list "(0)" 1344 . 1347)))
          ("MAX_OBJ_SIZE" . ((symbol "MAX_PAYLOAD" 689 . 700)))
          ("CRYPTO_PROVIDER_STR" . ((string "\"cryptoProvider\"" 1192 . 1208)))
          ("MAX_PRF_PAYLOAD" . ((semantic-list "(1024)" 726 . 732)))
          ("SESSION_FALSE" . ((semantic-list "(false)" 789 . 796)))
          ("EMPTY_UUID" . ((string "\"00000000-0000-0000-0000-000000000000\"" 900 . 938)))
          ("LSAR_CRYPTO_COMMON_GLOBAL_H_")
          ("TYPE_IGNORE" . ((semantic-list "(0)" 977 . 980)))
          ("EXPORTABLE_FALSE" . ((semantic-list "(false)" 859 . 866)))
          ("UUID_STR" . ((string "\"uuid\"" 1117 . 1123)))
          ("TYPE_KEY_STORAGE_PROVIDER" . ((semantic-list "(2)" 1057 . 1060)))
          ("PROVIDER_INFO_STR" . ((string "\"provider_info\"" 1295 . 1310)))
          )
))
  :file "!home!hyuk.myeong!work!G550!Apps!source!autosar!ara-api!crypto!crypto-lib!include!lsar!crypto!common!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
