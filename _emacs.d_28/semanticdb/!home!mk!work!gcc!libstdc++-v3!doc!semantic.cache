;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-automake-mode
      :tags 
        '( ("$(top_srcdir)/fragment.am" include nil nil [960 994])
            ("STAMP_XML" variable (:default-value ("doc-xml")) nil [1414 1434])
            ("STAMP_INSTALL_XML" variable (:default-value ("doc-install-xml")) nil [1434 1470])
            ("STAMP_XML" variable nil nil [1475 1487])
            ("STAMP_INSTALL_XML" variable nil nil [1487 1507])
            ("STAMP_HTML" variable (:default-value ("doc-html")) nil [1528 1550])
            ("STAMP_INSTALL_HTML" variable (:default-value ("doc-install-html")) nil [1550 1588])
            ("STAMP_HTML" variable nil nil [1593 1606])
            ("STAMP_INSTALL_HTML" variable nil nil [1606 1627])
            ("STAMP_MAN" variable (:default-value ("doc-man")) nil [1647 1667])
            ("STAMP_INSTALL_MAN" variable (:default-value ("doc-install-man")) nil [1667 1703])
            ("STAMP_MAN" variable nil nil [1708 1720])
            ("STAMP_INSTALL_MAN" variable nil nil [1720 1740])
            ("STAMP_PDF" variable (:default-value ("doc-pdf")) nil [1760 1780])
            ("STAMP_INSTALL_PDF" variable (:default-value ("doc-install-pdf")) nil [1780 1816])
            ("STAMP_PDF" variable nil nil [1821 1833])
            ("STAMP_INSTALL_PDF" variable nil nil [1833 1853])
            ("STAMP_EPUB" variable (:default-value ("doc-epub")) nil [1874 1896])
            ("STAMP_INSTALL_EPUB" variable (:default-value ("doc-install-epub")) nil [1896 1934])
            ("STAMP_EPUB" variable (:default-value ("doc-epub")) nil [1939 1961])
            ("STAMP_INSTALL_EPUB" variable (:default-value ("doc-install-epub")) nil [1961 1999])
            ("xml" function (:arguments ("$(STAMP_XML)")) nil [2220 2238])
            ("install-xml" function (:arguments ("$(STAMP_INSTALL_XML)")) nil [2238 2272])
            ("html" function (:arguments ("$(STAMP_HTML)")) nil [2273 2293])
            ("install-html" function (:arguments ("$(STAMP_INSTALL_HTML)")) nil [2293 2329])
            ("man" function (:arguments ("$(STAMP_MAN)")) nil [2330 2348])
            ("install-man" function (:arguments ("$(STAMP_INSTALL_MAN)")) nil [2348 2382])
            ("pdf" function (:arguments ("$(STAMP_PDF)")) nil [2383 2401])
            ("install-pdf" function (:arguments ("$(STAMP_INSTALL_PDF)")) nil [2401 2435])
            ("epub" function (:arguments ("$(STAMP_EPUB)")) nil [2436 2456])
            ("install-epub" function (:arguments ("$(STAMP_INSTALL_EPUB)")) nil [2456 2492])
            ("info" function nil nil [2493 2499])
            ("install-info" function nil nil [2499 2513])
            ("ps" function nil nil [2514 2518])
            ("install-ps" function nil nil [2518 2530])
            ("dvi" function nil nil [2531 2536])
            ("install-dvi" function nil nil [2536 2549])
            ("xmldir" variable (:default-value ("\"$(DESTDIR)@docdir@\"")) nil [2754 2782])
            ("stamp-xml" function (:arguments ("stamp-xml-single-docbook" "stamp-xml-single-doxygen")) nil [2782 2863])
            ("doc-xml" function (:arguments ("stamp-xml")) nil [2864 2883])
            ("doc-install-xml" function (:arguments ("doc-xml")) nil [2884 3037])
            ("htmldir" variable (:default-value ("\"$(DESTDIR)@docdir@\"")) nil [3045 3074])
            ("stamp-html" function (:arguments ("stamp-html-docbook-data" "stamp-html-doxygen")) nil [3074 3150])
            ("doc-html" function (:arguments ("stamp-html")) nil [3151 3172])
            ("doc-install-html" function (:arguments ("doc-html")) nil [3173 3376])
            ("pdfdir" variable (:default-value ("\"$(DESTDIR)@docdir@\"")) nil [3383 3411])
            ("stamp-pdf" function (:arguments ("stamp-pdf-docbook" "stamp-pdf-doxygen")) nil [3411 3478])
            ("doc-pdf" function (:arguments ("stamp-pdf")) nil [3479 3498])
            ("doc-install-pdf" function (:arguments ("doc-pdf")) nil [3499 3710])
            ("mandir" variable (:default-value ("\"$(DESTDIR)@mandir@\"")) nil [3717 3745])
            ("stamp-man" function (:arguments ("stamp-man-doxygen")) nil [3745 3794])
            ("doc-man" function (:arguments ("stamp-man")) nil [3795 3814])
            ("doc-install-man" function (:arguments ("doc-man")) nil [3815 3933])
            ("infodir" variable (:default-value ("\"$(DESTDIR)@infodir@\"")) nil [3949 3979])
            ("stamp-texinfo" function (:arguments ("stamp-texinfo-docbook")) nil [3979 4040])
            ("stamp-info" function (:arguments ("stamp-info-docbook")) nil [4041 4093])
            ("doc-texinfo" function (:arguments ("stamp-texinfo")) nil [4094 4121])
            ("doc-info" function (:arguments ("stamp-info")) nil [4122 4143])
            ("doc-install-texinfo" function (:arguments ("doc-texinfo")) nil [4144 4271])
            ("doc-install-info" function (:arguments ("doc-info")) nil [4272 4393])
            ("epubdir" variable (:default-value ("\"$(DESTDIR)@docdir@\"")) nil [4426 4455])
            ("stamp-epub" function (:arguments ("stamp-epub-docbook")) nil [4455 4507])
            ("doc-epub" function (:arguments ("stamp-epub")) nil [4508 4529])
            ("doc-install-epub" function (:arguments ("doc-epub")) nil [4530 4651])
            ("doxygen_script" variable (:default-value ("${top_srcdir}/scripts/run_doxygen")) nil [4736 4785])
            ("doxygen_outdir" variable (:default-value ("${glibcxx_builddir}/doc/doxygen")) nil [4785 4834])
            ("api_xml" variable (:default-value ("${doxygen_outdir}/xml/libstdc++-api.xml")) nil [4834 4884])
            ("doxygen_pdf" variable (:default-value ("${doxygen_outdir}/latex/refman.pdf")) nil [4884 4933])
            ("api_pdf" variable (:default-value ("${doxygen_outdir}/pdf/libstdc++-api.pdf")) nil [4933 4983])
            ("${doxygen_outdir}" function nil nil [4984 5039])
            ("${doxygen_outdir}" function nil nil [5040 5097])
            ("${doxygen_outdir}" function nil nil [5098 5157])
            ("${doxygen_outdir}" function nil nil [5158 5213])
            ("${doxygen_outdir}" function nil nil [5214 5269])
            ("stamp-xml-doxygen" function (:arguments ("${doxygen_outdir}/xml")) nil [5270 5527])
            ("stamp-xml-single-doxygen" function (:arguments ("stamp-xml-doxygen")) nil [5528 5751])
            ("stamp-html-doxygen" function (:arguments ("${doxygen_outdir}/html")) nil [5752 6014])
            ("stamp-latex-doxygen" function (:arguments ("${doxygen_outdir}/latex")) nil [6015 6280])
            ("stamp-pdf-doxygen" function (:arguments ("stamp-latex-doxygen" "${doxygen_outdir}/pdf")) nil [6661 7061])
            ("stamp-man-doxygen" function (:arguments ("${doxygen_outdir}/man")) nil [7062 7320])
            ("doc-xml-doxygen" function (:arguments ("stamp-xml-doxygen")) nil [7321 7356])
            ("doc-xml-single-doxygen" function (:arguments ("stamp-xml-single-doxygen")) nil [7356 7405])
            ("doc-html-doxygen" function (:arguments ("stamp-html-doxygen")) nil [7405 7442])
            ("doc-latex-doxygen" function (:arguments ("stamp-latex-doxygen")) nil [7442 7481])
            ("doc-pdf-doxygen" function (:arguments ("stamp-pdf-doxygen")) nil [7481 7516])
            ("doc-man-doxygen" function (:arguments ("stamp-man-doxygen")) nil [7516 7551])
            ("docbook_outdir" variable (:default-value ("${glibcxx_builddir}/doc/docbook")) nil [7657 7706])
            ("xml_dir" variable (:default-value ("${glibcxx_srcdir}/doc/xml")) nil [7706 7742])
            ("xml_sources_basic" variable (:default-value ("${xml_dir}/spine.xml" "${xml_dir}/authors.xml" "${xml_dir}/api.xml" "${xml_dir}/faq.xml")) nil [7743 7857])
            ("xml_sources_manual" variable (:default-value ("${xml_dir}/manual/abi.xml" "${xml_dir}/manual/algorithms.xml" "${xml_dir}/manual/allocator.xml" "${xml_dir}/manual/auto_ptr.xml" "${xml_dir}/manual/atomics.xml" "${xml_dir}/manual/backwards_compatibility.xml" "${xml_dir}/manual/bitmap_allocator.xml" "${xml_dir}/manual/build_hacking.xml" "${xml_dir}/manual/codecvt.xml" "${xml_dir}/manual/concurrency.xml" "${xml_dir}/manual/concurrency_extensions.xml" "${xml_dir}/manual/configure.xml" "${xml_dir}/manual/containers.xml" "${xml_dir}/manual/ctype.xml" "${xml_dir}/manual/debug_mode.xml" "${xml_dir}/manual/debug.xml" "${xml_dir}/manual/diagnostics.xml" "${xml_dir}/manual/documentation_hacking.xml" "${xml_dir}/manual/evolution.xml" "${xml_dir}/manual/extensions.xml" "${xml_dir}/manual/internals.xml" "${xml_dir}/manual/intro.xml" "${xml_dir}/manual/io.xml" "${xml_dir}/manual/iterators.xml" "${xml_dir}/manual/locale.xml" "${xml_dir}/manual/localization.xml" "${xml_dir}/manual/messages.xml" "${xml_dir}/manual/mt_allocator.xml" "${xml_dir}/manual/numerics.xml" "${xml_dir}/manual/parallel_mode.xml" "${xml_dir}/manual/policy_data_structures.xml" "${xml_dir}/manual/policy_data_structures_biblio.xml" "${xml_dir}/manual/prerequisites.xml" "${xml_dir}/manual/shared_ptr.xml" "${xml_dir}/manual/spine.xml" "${xml_dir}/manual/status_cxx1998.xml" "${xml_dir}/manual/status_cxx2011.xml" "${xml_dir}/manual/status_cxx2014.xml" "${xml_dir}/manual/status_cxxtr1.xml" "${xml_dir}/manual/status_cxxtr24733.xml" "${xml_dir}/manual/strings.xml" "${xml_dir}/manual/support.xml" "${xml_dir}/manual/test.xml" "${xml_dir}/manual/test_policy_data_structures.xml" "${xml_dir}/manual/using.xml" "${xml_dir}/manual/using_exceptions.xml" "${xml_dir}/manual/utilities.xml" "${xml_dir}/manual/appendix_free.xml" "${xml_dir}/manual/appendix_contributing.xml" "${xml_dir}/manual/appendix_porting.xml")) nil [7858 9758])
            ("xml_sources_extra" variable (:default-value ("${xml_dir}/gnu/fdl-1.3.xml" "${xml_dir}/gnu/gpl-3.0.xml")) nil [9759 9839])
            ("xml_sources" variable (:default-value ("${xml_sources_basic}" "${xml_sources_manual}" "${xml_sources_extra}")) nil [9840 9927])
            ("xml_image_dir" variable (:default-value ("${xml_dir}/images")) nil [9928 9962])
            ("xml_image_basic" variable (:default-value ("${xml_image_dir}/confdeps.png" "${xml_image_dir}/pbds_balls_and_bins.png" "${xml_image_dir}/pbds_container_tag_hierarchy.png" "${xml_image_dir}/pbds_different_underlying_dss_1.png" "${xml_image_dir}/pbds_different_underlying_dss_2.png" "${xml_image_dir}/pbds_embedded_lists_1.png" "${xml_image_dir}/pbds_embedded_lists_2.png" "${xml_image_dir}/pbds_embedded_lists_3.png" "${xml_image_dir}/pbds_exception_hierarchy.png" "${xml_image_dir}/pbds_hash_policy_cd.png" "${xml_image_dir}/pbds_hash_ranged_hash_range_hashing_fns.png" "${xml_image_dir}/pbds_hash_range_hashing_seq_diagram2.png" "${xml_image_dir}/pbds_hash_range_hashing_seq_diagram.png" "${xml_image_dir}/pbds_insert_resize_sequence_diagram1.png" "${xml_image_dir}/pbds_insert_resize_sequence_diagram2.png" "${xml_image_dir}/pbds_insert_resize_sequence_diagram3.png" "${xml_image_dir}/pbds_invalidation_guarantee_erase.png" "${xml_image_dir}/pbds_invalidation_tag_hierarchy.png" "${xml_image_dir}/pbds_list_update.png" "${xml_image_dir}/pbds_node_invariants.png" "${xml_image_dir}/pbds_pat_trie.png" "${xml_image_dir}/pbds_point_iterator_hierarchy.png" "${xml_image_dir}/pbds_point_iterators_range_ops_1.png" "${xml_image_dir}/pbds_point_iterators_range_ops_2.png" "${xml_image_dir}/pbds_priority_queue_different_underlying_dss.png" "${xml_image_dir}/pbds_priority_queue_tag_hierarchy.png" "${xml_image_dir}/pbds_rationale_null_node_updator.png" "${xml_image_dir}/pbds_resize_policy_cd.png" "${xml_image_dir}/pbds_restoring_node_invariants.png" "${xml_image_dir}/pbds_simple_list.png" "${xml_image_dir}/pbds_tree_node_invalidations.png" "${xml_image_dir}/pbds_tree_node_invariants.png" "${xml_image_dir}/pbds_tree_node_updator_policy_cd.png" "${xml_image_dir}/pbds_trie_node_updator_policy_cd.png" "${xml_image_dir}/pbds_update_seq_diagram.png")) nil [9962 11818])
            ("xml_image_generated" variable (:default-value ("${xml_image_dir}/pbds_binary_priority_queue_int_push_pop.png" "${xml_image_dir}/pbds_binary_priority_queue_int_push.png" "${xml_image_dir}/pbds_ccgp_hash_int_subscript_insert.png" "${xml_image_dir}/pbds_cc_hash_int_find.png" "${xml_image_dir}/pbds_cc_hash_int_subscript_find.png" "${xml_image_dir}/pbds_cc_hash_int_subscript_insert.png" "${xml_image_dir}/pbds_gp_hash_int_find.png" "${xml_image_dir}/pbds_gp_hash_int_subscript_find.png" "${xml_image_dir}/pbds_gp_hash_int_subscript_insert.png" "${xml_image_dir}/pbds_hash_int_erase_mem.png" "${xml_image_dir}/pbds_hash_text_find.png" "${xml_image_dir}/pbds_hash_zlob_int_find.png" "${xml_image_dir}/pbds_multimap_text_find_large_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_find_large_s2p_tree.png" "${xml_image_dir}/pbds_multimap_text_find_small_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_find_small_s2p_tree.png" "${xml_image_dir}/pbds_multimap_text_insert_large_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_insert_large_s2p_tree.png" "${xml_image_dir}/pbds_multimap_text_insert_mem_large_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_insert_mem_large_s2p_tree.png" "${xml_image_dir}/pbds_multimap_text_insert_mem_small_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_insert_mem_small_s2p_tree.png" "${xml_image_dir}/pbds_multimap_text_insert_small_s2p_hash.png" "${xml_image_dir}/pbds_multimap_text_insert_small_s2p_tree.png" "${xml_image_dir}/pbds_pairing_priority_queue_text_modify_down_thin.png" "${xml_image_dir}/pbds_pairing_priority_queue_text_modify_up_thin.png" "${xml_image_dir}/pbds_pairing_priority_queue_text_push_pop.png" "${xml_image_dir}/pbds_pairing_priority_queue_text_push.png" "${xml_image_dir}/pbds_priority_queue_int_push_pop.png" "${xml_image_dir}/pbds_priority_queue_int_push.png" "${xml_image_dir}/pbds_priority_queue_text_join.png" "${xml_image_dir}/pbds_priority_queue_text_modify_down.png" "${xml_image_dir}/pbds_priority_queue_text_modify_up.png" "${xml_image_dir}/pbds_priority_queue_text_pop_mem.png" "${xml_image_dir}/pbds_priority_queue_text_push_pop.png" "${xml_image_dir}/pbds_priority_queue_text_push.png" "${xml_image_dir}/pbds_tree_int_find.png" "${xml_image_dir}/pbds_tree_order_statistics.png" "${xml_image_dir}/pbds_tree_split_join.png" "${xml_image_dir}/pbds_tree_text_find.png" "${xml_image_dir}/pbds_tree_text_insert_node.png" "${xml_image_dir}/pbds_tree_text_insert_trie.png" "${xml_image_dir}/pbds_tree_text_insert_vector.png" "${xml_image_dir}/pbds_tree_text_lor_find.png")) nil [11819 14386])
            ("xml_images" variable (:default-value ("${xml_image_basic}" "${xml_image_generated}")) nil [14387 14442])
            ("xml_noinst" variable (:default-value ("${xml_dir}/book.txml" "${xml_dir}/chapter.txml" "${xml_dir}/class.txml" "${xml_image_dir}/confdeps.dot" "${xml_image_dir}/confdeps.pdf")) nil [14443 14598])
            ("XSLTPROC" variable (:default-value ("xsltproc")) nil [14599 14625])
            ("XSLT_FLAGS" variable (:default-value ("--nonet" "--xinclude")) nil [14625 14657])
            ("XSLT_PARAM" variable (:default-value ("--param" "toc.section.depth" "4" "--param" "generate.consistent.ids" "1")) nil [14657 14732])
            ("XSL_FO_STYLE" variable (:default-value ("$(XSL_STYLE_DIR)/fo/docbook.xsl")) nil [14858 14905])
            ("XSL_HTML_STYLE" variable (:default-value ("$(XSL_STYLE_DIR)/xhtml/chunk.xsl")) nil [14905 14955])
            ("XSL_HTML_SINGLE_STYLE" variable (:default-value ("$(XSL_STYLE_DIR)/html/docbook.xsl")) nil [14955 15013])
            ("XSL_EPUB_STYLE" variable (:default-value ("$(XSL_STYLE_DIR)/epub3/chunk.xsl")) nil [15013 15063])
            ("XSL_LOCAL_STYLE" variable (:default-value ("${glibcxx_builddir}/doc/xsl/customization.xsl")) nil [15063 15127])
            ("${docbook_outdir}" function nil nil [15128 15231])
            ("${docbook_outdir}" function nil nil [15232 15285])
            ("${docbook_outdir}" function nil nil [15286 15460])
            ("${docbook_outdir}" function nil nil [15461 15516])
            ("${docbook_outdir}" function nil nil [15517 15576])
            ("${docbook_outdir}" function nil nil [15577 15640])
            ("${docbook_outdir}" function nil nil [15641 15696])
            ("manual_xml" variable (:default-value ("${docbook_outdir}/xml/libstdc++-manual.xml")) nil [15815 15871])
            ("set_xml" variable (:default-value ("${docbook_outdir}/xml/libstdc++-set.xml")) nil [15871 15921])
            ("stamp-xml-single-docbook" function (:arguments ("$(xml_sources)" "${docbook_outdir}/xml")) nil [15921 16219])
            ("doc-xml-single-docbook" function (:arguments ("stamp-xml-single-docbook")) nil [16220 16269])
            ("XMLLINT" variable (:default-value ("xmllint")) nil [16305 16323])
            ("LINT_FLAGS" variable (:default-value ("--debug" "--xinclude" "--noent" "--noblanks" "--noout")) nil [16323 16382])
            ("SCHEMA_FLAGS" variable (:default-value ("--dtdvalid" "http://www.docbook.org/xml/5.0/dtd/docbook.dtd")) nil [16382 16455])
            ("SCHEMA_RNG_FLAGS" variable (:default-value ("--relaxng" "http://www.docbook.org/xml/5.0/rng/docbook.rng")) nil [16455 16531])
            ("XMLLINT_VALID_FLAGS" variable (:default-value ("$(LINT_FLAGS)" "$(SCHEMA_FLAGS)")) nil [16601 16653])
            ("XMLLINT_FLAGS" variable (:default-value ("--xinclude" "--nsclean" "--c14n" "--noent" "--noblanks" "--nocdata")) nil [16653 16726])
            ("doc-xml-validate-docbook" function (:arguments ("doc-xml-validate-dtd-db")) nil [16726 16776])
            ("doc-xml-validate-dtd-db" function (:arguments ("$(xml_sources)" "$(xml_images)")) nil [16777 16940])
            ("doc-xml-validate-rng-db" function (:arguments ("$(xml_sources)" "$(xml_images)" "doc-xml-single-docbook")) nil [16941 17125])
            ("stamp-html-docbook-images" function (:arguments ("stamp-html-docbook" "$(xml_images)")) nil [17147 17304])
            ("stamp-html-docbook-data" function (:arguments ("stamp-html-docbook-images")) nil [17305 17390])
            ("stamp-html-docbook" function (:arguments ("$(xml_sources)" "${docbook_outdir}/html")) nil [17452 17745])
            ("doc-html-docbook" function (:arguments ("stamp-html-docbook-data")) nil [17746 17788])
            ("manual_html" variable (:default-value ("${docbook_outdir}/html/libstdc++-manual-single.html")) nil [17869 17935])
            ("stamp-html-single-docbook" function (:arguments ("$(xml_sources)" "${docbook_outdir}/html")) nil [17935 18192])
            ("doc-html-single-docbook" function (:arguments ("stamp-html-single-docbook")) nil [18193 18244])
            ("stamp-fo-docbook" function (:arguments ("$(xml_sources)" "${docbook_outdir}/fo")) nil [18250 18474])
            ("doc-fo-docbook" function (:arguments ("stamp-fo-docbook")) nil [18475 18508])
            ("manual_pdf" variable (:default-value ("${docbook_outdir}/pdf/libstdc++-manual.pdf")) nil [18528 18584])
            ("DBLATEX_FLAGS" variable (:default-value ("--verbose" "--pdf" "--dump" "--debug" "--tmpdir=${docbook_outdir}/latex")) nil [18584 18664])
            ("doc-pdf-docbook-dirs" function (:arguments ("${docbook_outdir}/pdf" "${docbook_outdir}/latex")) nil [18665 18733])
            ("doc-pdf-docbook-pre" function (:arguments ("$(xml_sources)" "doc-pdf-docbook-dirs")) nil [18734 18791])
            ("stamp-pdf-docbook" function (:arguments ("doc-pdf-docbook-pre" "doc-xml-single-docbook")) nil [18792 19001])
            ("doc-pdf-docbook" function (:arguments ("stamp-pdf-docbook")) nil [19002 19037])
            ("manual_texi" variable (:default-value ("${docbook_outdir}/texinfo/libstdc++-manual.texi")) nil [19104 19166])
            ("manual_info" variable (:default-value ("${docbook_outdir}/texinfo/libstdc++-manual.info")) nil [19166 19228])
            ("DB2TEXI_FLAGS" variable (:default-value ("--encoding=utf-8//TRANSLIT" "--string-param" "output-file=\"libstdc++-manual\"" "--string-param" "directory-category=\"GNU C++ Library\"" "--string-param" "explicit-node-names=true")) nil [19228 19421])
            ("stamp-texinfo-docbook" function (:arguments ("stamp-xml-single-docbook" "${docbook_outdir}/texinfo")) nil [19422 19653])
            ("stamp-info-docbook" function (:arguments ("stamp-texinfo-docbook")) nil [19654 19804])
            ("doc-texinfo-docbook" function (:arguments ("stamp-texinfo-docbook")) nil [19805 19848])
            ("doc-info-docbook" function (:arguments ("stamp-info-docbook")) nil [19849 19886])
            ("manual_epub" variable (:default-value ("${docbook_outdir}/epub/libstdc++-manual.epub")) nil [19996 20055])
            ("stamp-epub-docbook" function (:arguments ("stamp-xml-single-docbook" "${docbook_outdir}/epub")) nil [20055 20663])
            ("doc-epub-docbook" function (:arguments ("stamp-epub-docbook")) nil [20664 20701])
            ("doc_performance_script" variable (:default-value ("${top_srcdir}/scripts/make_graph.py")) nil [20851 20910])
            ("doc-svg-performance" function (:arguments ("${docbook_outdir}/xml")) nil [20910 21159])
            (".PHONY" function (:arguments ("doc-doxygen-html" "doc-doxygen-man" "doc-performance")) nil [21160 21217])
            ("CLEANFILES" variable (:default-value ("*.log" "stamp*")) nil [21291 21317])
            ("clean-local" function nil nil [21343 21420]))          
      :file "Makefile.am"
      :pointmax 21420
      :fsize 21419
      :lastmodtime '(23951 21817 998365 21000)
      :unmatched-syntax '((shell-command 21357 . 21419) (bol 21356 . 21356))))
  :file "!home!mk!work!gcc!libstdc++-v3!doc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
