snippet main
	public static void main (String [] args)
	{
		${1:/* code */}
	}
snippet pu
	public
snippet po
	protected
snippet pr
	private
snippet st
	static
snippet fi
	final
snippet ab
	abstract
snippet re
	return
snippet br
	break;
snippet de
	default:
		${1}
snippet ca
	catch(${1:Exception} ${2:e}) ${3}
snippet th
	throw 
snippet sy
	synchronized
snippet im
	import
snippet j.u
	java.util
snippet j.i
	java.io.
snippet j.b
	java.beans.
snippet j.n
	java.net.
snippet j.m
	java.math.
snippet if
	if (${1:/* condition */})
	{
		${2:/* code */}
	}
	else if (${3:/* condition */})
	{
		${4:/* code */}
	else
	{
		${5:/* code */}
	}
	${6}
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});
	${3:}
snippet while
	while (${1:/* condition */}) {
		${2:/* code */}
	}
	${3:}
snippet for
	for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}
	${5:}
snippet for2
	for (${1} : ${2}) ${3}
snippet switch
	switch (${1:/* variable */}) {
	case ${2:/* condition */} :
		${3:/* code */}
		break;
	case ${4:/* condition */} :
		${5:/* code */}
		break;
	case ${6:/* condition */} :
		${7:/* code */}
		break;			
	default :
		${8:/* code */}
		break;
	}
	${9}
snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
snippet t
	public void test${1:Name}() throws Exception ${2}
snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
snippet cos
	static public final String ${1:var} = "${2}";${3}
snippet as
	assert ${1:test} : "${2:Failure message}";${3}
